{"version":3,"sources":["webpack:///./src/components/organ/BestProductLine.tsx","webpack:///./src/components/organ/MainSectionCard.tsx","webpack:///./src/components/organism/BestProductsSection.tsx","webpack:///./src/components/organism/MainSection.tsx","webpack:///./src/pages/index.tsx"],"names":["BestProductLine","productFamily","fixed","className","to","slugify","MainSectionCard","title","date","description","fluid","slug","BestProductsSection","query","theBestProductsQuery","render","data","allStrapiProduct","edges","map","node","key","id","image","childImageSharp","name","MainSection","mainArticle","allStrapiArticle","publishedAt","IndexPage","useStaticQuery","Layout","seo","strapiGlobal","ProductSection"],"mappings":"4FAAA,kFAuBeA,IAjBf,YAAmD,IAAxBC,EAAwB,EAAxBA,cAAeC,EAAS,EAATA,MACxC,OACE,6BACE,yBAAKC,UAAU,IACb,kBAAC,OAAD,CAAMC,GAAE,aAAeC,kBAAQJ,IAC7B,yBAAKE,UAAU,sBACb,kBAAC,IAAD,CAAKD,MAAOA,IACZ,wBAAIC,UAAU,8CACXF,S,+GCKAK,MAff,YAAoE,IAAzCC,EAAyC,EAAzCA,MAAOC,EAAkC,EAAlCA,KAAMC,EAA4B,EAA5BA,YAAaC,EAAe,EAAfA,MAAOC,EAAQ,EAARA,KAC1D,OACE,yBAAKR,UAAU,mBACb,kBAAC,OAAD,CAAMC,GAAE,aAAeO,GACrB,kBAAC,IAAD,CAAKD,MAAOA,KAEd,kBAAC,OAAD,CAAMN,GAAE,aAAeO,GACrB,wBAAIR,UAAU,oCAAoCI,IAEpD,wBAAIJ,UAAU,iBAAd,iBAA6CK,GAC7C,4BAAKC,K,wBCkBIG,MA3Bf,WACE,OACE,6BACE,yBAAKT,UAAU,2BACb,kBAAC,cAAD,CACEU,MAAOC,EACPC,OAAQ,SAACC,GACP,OACE,6BACGA,EAAKC,iBAAiBC,MAAMC,KAAI,gBAAGC,EAAH,EAAGA,KAAH,OAC/B,kBAACpB,EAAA,EAAD,CACEqB,IAAKD,EAAKE,GACVpB,MAAOkB,EAAKG,MAAMC,gBAAgBtB,MAClCuB,KAAML,EAAKK,KACXxB,cAAemB,EAAKnB,cACpBU,KAAMS,EAAKT,iBAczBG,EAAuB,a,qBCUdY,MArCf,WACE,OACE,yBAAKvB,UAAU,OACb,yBAAKA,UAAU,sCACb,yBAAKA,UAAU,yBACb,yBAAKA,UAAU,wBACb,kBAAC,cAAD,CACEU,MAAOc,EACPZ,OAAQ,SAACC,GACP,OACE,6BACGA,EAAKY,iBAAiBV,MAAMC,KAAI,gBAAGC,EAAH,EAAGA,KAAH,OAC/B,kBAAC,EAAD,CACEC,IAAKD,EAAKE,GACVf,MAAOa,EAAKb,MACZC,KAAMY,EAAKS,YACXpB,YAAaW,EAAKX,YAClBC,MAAOU,EAAKG,MAAMC,gBAAgBd,MAClCC,KAAMS,EAAKT,gBAS3B,yBAAKR,UAAU,wBACb,kBAAC,IAAD,KACE,kBAAC,EAAD,WAUNwB,EAAc,a,YC7Bdd,EAAQ,aAcCiB,UAzBG,WAChB,IAAMd,EAAOe,yBAAelB,GAE5B,OACE,kBAACmB,EAAA,EAAD,CAAQC,IAAKjB,EAAKkB,aAAaD,KAC7B,kBAAC,EAAD,MACA,kBAACE,EAAA,EAAD","file":"component---src-pages-index-tsx-a311f6de19d4c466489a.js","sourcesContent":["import React from 'react';\r\nimport Img from 'gatsby-image';\r\nimport { Link } from 'gatsby';\r\nimport '../../assets/styles/index.scss';\r\nimport { slugify } from '../../assets/utilityFunctions';\r\n\r\nfunction BestProductLine({ productFamily, fixed }) {\r\n  return (\r\n    <div>\r\n      <div className=\"\">\r\n        <Link to={`/products/${slugify(productFamily)}`}>\r\n          <div className=\"flex flex-row my-1\">\r\n            <Img fixed={fixed} />\r\n            <h4 className=\"mx-2 my-4 text-blue-600 hover:text-red-400\">\r\n              {productFamily}\r\n            </h4>\r\n          </div>\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default BestProductLine;\r\n","import React from 'react';\r\nimport Img from 'gatsby-image';\r\nimport { Link } from 'gatsby';\r\n\r\nfunction MainSectionCard({ title, date, description, fluid, slug }) {\r\n  return (\r\n    <div className=\"MainSectionCard\">\r\n      <Link to={`/articles/${slug}`}>\r\n        <Img fluid={fluid} />\r\n      </Link>\r\n      <Link to={`/articles/${slug}`}>\r\n        <h1 className=\"text-blue-600 hover:text-red-400\">{title}</h1>\r\n      </Link>\r\n      <h3 className=\"text-gray-400\">Published On: {date}</h3>\r\n      <h2>{description}</h2>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MainSectionCard;\r\n","import React from 'react';\r\nimport { graphql, StaticQuery } from 'gatsby';\r\nimport '../../assets/styles/index.scss';\r\nimport BestProductLine from '../organ/BestProductLine';\r\n\r\nfunction BestProductsSection() {\r\n  return (\r\n    <div>\r\n      <div className=\"mainSection__SideScreen\">\r\n        <StaticQuery\r\n          query={theBestProductsQuery}\r\n          render={(data) => {\r\n            return (\r\n              <div>\r\n                {data.allStrapiProduct.edges.map(({ node }) => (\r\n                  <BestProductLine\r\n                    key={node.id}\r\n                    fixed={node.image.childImageSharp.fixed}\r\n                    name={node.name}\r\n                    productFamily={node.productFamily}\r\n                    slug={node.slug}\r\n                  />\r\n                ))}\r\n              </div>\r\n            );\r\n          }}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default BestProductsSection;\r\n\r\nconst theBestProductsQuery = graphql`\r\n  {\r\n    allStrapiProduct(filter: { rating: { eq: 10 } }, limit: 10) {\r\n      edges {\r\n        node {\r\n          id\r\n          name\r\n          slug\r\n          productFamily\r\n          image {\r\n            childImageSharp {\r\n              fixed(height: 58, width: 64) {\r\n                ...GatsbyImageSharpFixed\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import React from 'react';\r\nimport { graphql, StaticQuery } from 'gatsby';\r\nimport MainSectionCard from '../organ/MainSectionCard';\r\nimport '../../assets/styles/index.scss';\r\nimport BestProductsSection from './BestProductsSection';\r\nimport Bounce from 'react-reveal/Bounce';\r\n\r\nfunction MainSection() {\r\n  return (\r\n    <div className=\"m-6\">\r\n      <div className=\"columns is-variable is-tablet is-7\">\r\n        <div className=\"column is-two-thirds \">\r\n          <div className=\"mainSection__Article\">\r\n            <StaticQuery\r\n              query={mainArticle}\r\n              render={(data) => {\r\n                return (\r\n                  <div>\r\n                    {data.allStrapiArticle.edges.map(({ node }) => (\r\n                      <MainSectionCard\r\n                        key={node.id}\r\n                        title={node.title}\r\n                        date={node.publishedAt}\r\n                        description={node.description}\r\n                        fluid={node.image.childImageSharp.fluid}\r\n                        slug={node.slug}\r\n                      />\r\n                    ))}\r\n                  </div>\r\n                );\r\n              }}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"column is-one-thirds\">\r\n          <Bounce>\r\n            <BestProductsSection />\r\n          </Bounce>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MainSection;\r\n\r\nconst mainArticle = graphql`\r\n  {\r\n    allStrapiArticle(\r\n      limit: 1\r\n      sort: { fields: publishedAt, order: DESC }\r\n      filter: { status: { eq: \"published\" } }\r\n    ) {\r\n      edges {\r\n        node {\r\n          id\r\n          slug\r\n          title\r\n          publishedAt(formatString: \"DD-MM-YYYY\")\r\n          description\r\n          category {\r\n            name\r\n          }\r\n          image {\r\n            childImageSharp {\r\n              fluid {\r\n                ...GatsbyImageSharpFluid\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import React from 'react';\r\nimport { graphql, useStaticQuery } from 'gatsby';\r\nimport Layout from '../components/Global/Layout';\r\nimport MainSection from '../components/organism/MainSection';\r\nimport ProductSection from '../components/organism/ProductSection';\r\n\r\nconst IndexPage = () => {\r\n  const data = useStaticQuery(query);\r\n\r\n  return (\r\n    <Layout seo={data.strapiGlobal.seo}>\r\n      <MainSection />\r\n      <ProductSection />\r\n    </Layout>\r\n  );\r\n};\r\n\r\nconst query = graphql`\r\n  query {\r\n    strapiGlobal {\r\n      defaultSeo {\r\n        metaTitle\r\n        metaDescription\r\n        shareImage {\r\n          publicURL\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport default IndexPage;\r\n"],"sourceRoot":""}