{"version":3,"sources":["webpack:///./src/components/organ/BestProductLine.tsx","webpack:///./src/components/organ/RatingProductLine.tsx","webpack:///./src/pages/sociallyacclaimed.tsx","webpack:///./src/components/organ/ArticleSectionSideScreen.tsx","webpack:///./src/components/organism/SideScreen.tsx"],"names":["BestProductLine","productFamily","fixed","className","to","slugify","RatingProductLine","slug","left","sociallyacclaimed","query","sociallyacclaimedProductsQuery","render","data","allStrapiProduct","edges","map","node","key","id","image","childImageSharp","name","ArticleSectionSideScreen","articleSectionSideScreen","allStrapiArticle","fluid","title","publishedAt","SideScreen","SideScreenPost"],"mappings":"4FAAA,kFAuBeA,IAjBf,YAAmD,IAAxBC,EAAwB,EAAxBA,cAAeC,EAAS,EAATA,MACxC,OACE,6BACE,yBAAKC,UAAU,IACb,kBAAC,OAAD,CAAMC,GAAE,aAAeC,kBAAQJ,IAC7B,yBAAKE,UAAU,sBACb,kBAAC,IAAD,CAAKD,MAAOA,IACZ,wBAAIC,UAAU,8CACXF,S,kCCdf,uGA0BeK,IAnBf,YAA2D,IAA9BL,EAA8B,EAA9BA,cAAeC,EAAe,EAAfA,MAC1C,OADyD,EAARK,KAE/C,6BACE,kBAAC,IAAD,CAAQC,MAAI,GACV,6BACE,kBAAC,OAAD,CAAMJ,GAAE,aAAeC,kBAAQJ,IAC7B,yBAAKE,UAAU,2BACb,kBAAC,IAAD,CAAKD,MAAOA,IACZ,wBAAIC,UAAU,8CACXF,U,kCChBjB,0FAyCeQ,UAlCf,WACE,OACE,6BACE,kBAAC,IAAD,KACE,yBAAKN,UAAU,sCACb,yBAAKA,UAAU,yBACb,kBAAC,cAAD,CACEO,MAAOC,EACPC,OAAQ,SAACC,GACP,OACE,6BACGA,EAAKC,iBAAiBC,MAAMC,KAAI,gBAAGC,EAAH,EAAGA,KAAH,OAC/B,kBAAC,IAAD,CACEC,IAAKD,EAAKE,GACVjB,MAAOe,EAAKG,MAAMC,gBAAgBnB,MAClCoB,KAAML,EAAKK,KACXrB,cAAegB,EAAKhB,cACpBM,KAAMU,EAAKV,eAQzB,yBAAKJ,UAAU,wBACb,kBAAC,IAAD,WAUZ,IAAMQ,EAAiC,c,kHCRxBY,MA7Bf,WACE,OACE,yBAAKpB,UAAU,6BACb,kBAAC,cAAD,CACEO,MAAOc,EACPZ,OAAQ,SAACC,GACP,OACE,yBAAKV,UAAU,4BACZU,EAAKY,iBAAiBV,MAAMC,KAAI,gBAAGC,EAAH,EAAGA,KAAH,OAC/B,yBAAKd,UAAU,OAAOe,IAAKD,EAAKE,IAC9B,kBAAC,OAAD,CAAMf,GAAE,aAAea,EAAKV,MAC1B,kBAAC,IAAD,CAAKmB,MAAOT,EAAKG,MAAMC,gBAAgBK,QACvC,wBAAIvB,UAAU,oCACXc,EAAKU,QAGV,wBAAIxB,UAAU,iBAAd,iBACiBc,EAAKW,uBAclCJ,EAA2B,a,qBCElBK,IAhCf,WACE,OACE,6BACE,yBAAK1B,UAAU,6BACb,kBAAC,cAAD,CACEO,MAAOoB,EACPlB,OAAQ,SAACC,GACP,OACE,6BACGA,EAAKC,iBAAiBC,MAAMC,KAAI,gBAAGC,EAAH,EAAGA,KAAH,OAC/B,kBAAC,IAAD,CAAQC,IAAKD,EAAKE,IAChB,kBAACnB,EAAA,EAAD,CACEkB,IAAKD,EAAKE,GACVjB,MAAOe,EAAKG,MAAMC,gBAAgBnB,MAClCD,cAAegB,EAAKhB,yBASpC,yBAAKE,UAAU,SACb,kBAAC,IAAD,KACE,kBAAC,EAAD,UAOK0B,IAETC,EAAiB","file":"component---src-pages-sociallyacclaimed-tsx-7138eceba88837551318.js","sourcesContent":["import React from 'react';\r\nimport Img from 'gatsby-image';\r\nimport { Link } from 'gatsby';\r\nimport '../../assets/styles/index.scss';\r\nimport { slugify } from '../../assets/utilityFunctions';\r\n\r\nfunction BestProductLine({ productFamily, fixed }) {\r\n  return (\r\n    <div>\r\n      <div className=\"\">\r\n        <Link to={`/products/${slugify(productFamily)}`}>\r\n          <div className=\"flex flex-row my-1\">\r\n            <Img fixed={fixed} />\r\n            <h4 className=\"mx-2 my-4 text-blue-600 hover:text-red-400\">\r\n              {productFamily}\r\n            </h4>\r\n          </div>\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default BestProductLine;\r\n","import React from 'react';\r\nimport Img from 'gatsby-image';\r\nimport { Link } from 'gatsby';\r\nimport '../../assets/styles/index.scss';\r\nimport Bounce from 'react-reveal/Bounce';\r\nimport { slugify } from '../../assets/utilityFunctions';\r\n\r\nfunction RatingProductLine({ productFamily, fixed, slug }) {\r\n  return (\r\n    <div>\r\n      <Bounce left>\r\n        <div>\r\n          <Link to={`/products/${slugify(productFamily)}`}>\r\n            <div className=\"flex flex-row my-1 mx-5\">\r\n              <Img fixed={fixed} />\r\n              <h1 className=\"mx-3 my-9 text-blue-600 hover:text-red-400\">\r\n                {productFamily}\r\n              </h1>\r\n            </div>\r\n          </Link>\r\n        </div>\r\n      </Bounce>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default RatingProductLine;\r\n","import React from 'react';\r\nimport Layout from '../components/Global/Layout';\r\nimport { graphql, StaticQuery } from 'gatsby';\r\nimport SideScreen from '../components/organism/SideScreen';\r\nimport RatingProductLine from '../components/organ/RatingProductLine';\r\nimport '../assets/styles/index.scss';\r\n\r\nfunction sociallyacclaimed() {\r\n  return (\r\n    <div>\r\n      <Layout>\r\n        <div className=\"columns is-variable is-tablet is-1\">\r\n          <div className=\"column is-two-thirds \">\r\n            <StaticQuery\r\n              query={sociallyacclaimedProductsQuery}\r\n              render={(data) => {\r\n                return (\r\n                  <div>\r\n                    {data.allStrapiProduct.edges.map(({ node }) => (\r\n                      <RatingProductLine\r\n                        key={node.id}\r\n                        fixed={node.image.childImageSharp.fixed}\r\n                        name={node.name}\r\n                        productFamily={node.productFamily}\r\n                        slug={node.slug}\r\n                      />\r\n                    ))}\r\n                  </div>\r\n                );\r\n              }}\r\n            />\r\n          </div>\r\n          <div className=\"column is-one-thirds\">\r\n            <SideScreen />\r\n          </div>\r\n        </div>\r\n      </Layout>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default sociallyacclaimed;\r\n\r\nconst sociallyacclaimedProductsQuery = graphql`\r\n  {\r\n    allStrapiProduct(filter: { sociallyAcclaimed: { eq: \"yes\" } }, limit: 20) {\r\n      edges {\r\n        node {\r\n          id\r\n          name\r\n          slug\r\n          productFamily\r\n          image {\r\n            childImageSharp {\r\n              fixed(height: 130, width: 130) {\r\n                ...GatsbyImageSharpFixed\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import React from 'react';\r\nimport { graphql, StaticQuery } from 'gatsby';\r\nimport { Link } from 'gatsby';\r\nimport Img from 'gatsby-image';\r\nimport '../../assets/styles/index.scss';\r\n\r\nfunction ArticleSectionSideScreen() {\r\n  return (\r\n    <div className=\"sideScreen_ArticleSection\">\r\n      <StaticQuery\r\n        query={articleSectionSideScreen}\r\n        render={(data) => {\r\n          return (\r\n            <div className=\"articleSectionSideScreen\">\r\n              {data.allStrapiArticle.edges.map(({ node }) => (\r\n                <div className=\"my-3\" key={node.id}>\r\n                  <Link to={`/articles/${node.slug}`}>\r\n                    <Img fluid={node.image.childImageSharp.fluid} />\r\n                    <h1 className=\"text-blue-600 hover:text-red-400\">\r\n                      {node.title}\r\n                    </h1>\r\n                  </Link>\r\n                  <h3 className=\"text-gray-400\">\r\n                    Published On: {node.publishedAt}\r\n                  </h3>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          );\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ArticleSectionSideScreen;\r\n\r\nconst articleSectionSideScreen = graphql`\r\n  {\r\n    allStrapiArticle(sort: { fields: publishedAt, order: DESC }, limit: 3) {\r\n      edges {\r\n        node {\r\n          id\r\n          title\r\n          slug\r\n          publishedAt(formatString: \"DD MM YYYY\")\r\n          image {\r\n            childImageSharp {\r\n              fluid {\r\n                ...GatsbyImageSharpFluid\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import React from 'react';\r\nimport { graphql, StaticQuery } from 'gatsby';\r\nimport BestProductLine from '../organ/BestProductLine';\r\nimport ArticleSectionSideScreen from '../organ/ArticleSectionSideScreen';\r\nimport Bounce from 'react-reveal/Bounce';\r\nimport '../../assets/styles/index.scss';\r\n\r\nfunction SideScreen() {\r\n  return (\r\n    <div>\r\n      <div className=\"sideScreen_ProductSection\">\r\n        <StaticQuery\r\n          query={SideScreenPost}\r\n          render={(data) => {\r\n            return (\r\n              <div>\r\n                {data.allStrapiProduct.edges.map(({ node }) => (\r\n                  <Bounce key={node.id}>\r\n                    <BestProductLine\r\n                      key={node.id}\r\n                      fixed={node.image.childImageSharp.fixed}\r\n                      productFamily={node.productFamily}\r\n                    />\r\n                  </Bounce>\r\n                ))}\r\n              </div>\r\n            );\r\n          }}\r\n        />\r\n      </div>\r\n      <div className=\"my-10\">\r\n        <Bounce>\r\n          <ArticleSectionSideScreen />\r\n        </Bounce>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SideScreen;\r\n\r\nconst SideScreenPost = graphql`\r\n  {\r\n    allStrapiProduct(\r\n      filter: { rating: { eq: 10 } }\r\n      limit: 15\r\n      sort: { fields: publishedAt, order: DESC }\r\n    ) {\r\n      edges {\r\n        node {\r\n          id\r\n          name\r\n          productFamily\r\n          image {\r\n            childImageSharp {\r\n              fixed(height: 58, width: 64) {\r\n                ...GatsbyImageSharpFixed\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n"],"sourceRoot":""}