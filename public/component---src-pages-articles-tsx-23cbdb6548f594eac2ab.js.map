{"version":3,"sources":["webpack:///./src/components/organ/ArticleCard.tsx","webpack:///./src/pages/articles.tsx","webpack:///./src/components/organ/BestProductLine.tsx","webpack:///./src/components/organ/ArticleSectionSideScreen.tsx","webpack:///./src/components/organism/SideScreen.tsx"],"names":["ArticleCard","title","slug","date","fluid","description","className","to","article","Layout","style","marginRight","query","articlePageQuery","render","data","allStrapiArticle","edges","map","node","key","id","publishedAt","image","childImageSharp","SideScreen","BestProductLine","productFamily","fixed","slugify","ArticleSectionSideScreen","articleSectionSideScreen","SideScreenPost","allStrapiProduct"],"mappings":"yKA+BeA,MA1Bf,YAAgE,IAAzCC,EAAyC,EAAzCA,MAAOC,EAAkC,EAAlCA,KAAMC,EAA4B,EAA5BA,KAAMC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,YAC/C,OACE,6BACE,yBAAKC,UAAU,mBACb,kBAAC,OAAD,CAAMC,GAAE,aAAeL,GACrB,yBAAKI,UAAU,sBACb,kBAAC,IAAD,CAAKF,MAAOA,KAEd,wBAAIE,UAAU,4DACXL,IAGL,yBAAKK,UAAU,qBACb,2BAAID,GACJ,wBAAIC,UAAU,yCAAd,iBACiBH,GAEjB,kBAAC,OAAD,CAAMI,GAAE,aAAeL,GACrB,4BAAQI,UAAU,qBAAlB,yB,wBCkBGE,UAnCf,WACE,OACE,kBAACC,EAAA,EAAD,KACE,yBAAKH,UAAU,WACb,yBAAKA,UAAU,uBAAuBI,MAAO,CAAEC,YAAa,UAC1D,yBAAKL,UAAU,WACb,kBAAC,cAAD,CACEM,MAAOC,EACPC,OAAQ,SAACC,GACP,OACE,6BACGA,EAAKC,iBAAiBC,MAAMC,KAAI,gBAAGC,EAAH,EAAGA,KAAH,OAC/B,kBAAC,EAAD,CACEC,IAAKD,EAAKE,GACVpB,MAAOkB,EAAKlB,MACZC,KAAMiB,EAAKjB,KACXC,KAAMgB,EAAKG,YACXjB,YAAac,EAAKd,YAClBD,MAAOe,EAAKI,MAAMC,gBAAgBpB,iBASlD,yBAAKE,UAAU,wBACb,kBAACmB,EAAA,EAAD,UAOKjB,IAETK,EAAmB,c,kCC3CzB,kFAuBea,IAjBf,YAAmD,IAAxBC,EAAwB,EAAxBA,cAAeC,EAAS,EAATA,MACxC,OACE,6BACE,yBAAKtB,UAAU,IACb,kBAAC,OAAD,CAAMC,GAAE,aAAesB,kBAAQF,IAC7B,yBAAKrB,UAAU,sBACb,kBAAC,IAAD,CAAKsB,MAAOA,IACZ,wBAAItB,UAAU,8CACXqB,S,kHCqBAG,MA7Bf,WACE,OACE,yBAAKxB,UAAU,6BACb,kBAAC,cAAD,CACEM,MAAOmB,EACPjB,OAAQ,SAACC,GACP,OACE,yBAAKT,UAAU,4BACZS,EAAKC,iBAAiBC,MAAMC,KAAI,gBAAGC,EAAH,EAAGA,KAAH,OAC/B,yBAAKb,UAAU,OAAOc,IAAKD,EAAKE,IAC9B,kBAAC,OAAD,CAAMd,GAAE,aAAeY,EAAKjB,MAC1B,kBAAC,IAAD,CAAKE,MAAOe,EAAKI,MAAMC,gBAAgBpB,QACvC,wBAAIE,UAAU,oCACXa,EAAKlB,QAGV,wBAAIK,UAAU,iBAAd,iBACiBa,EAAKG,uBAclCS,EAA2B,a,qBCElBN,IAhCf,WACE,OACE,6BACE,yBAAKnB,UAAU,6BACb,kBAAC,cAAD,CACEM,MAAOoB,EACPlB,OAAQ,SAACC,GACP,OACE,6BACGA,EAAKkB,iBAAiBhB,MAAMC,KAAI,gBAAGC,EAAH,EAAGA,KAAH,OAC/B,kBAAC,IAAD,CAAQC,IAAKD,EAAKE,IAChB,kBAACK,EAAA,EAAD,CACEN,IAAKD,EAAKE,GACVO,MAAOT,EAAKI,MAAMC,gBAAgBI,MAClCD,cAAeR,EAAKQ,yBASpC,yBAAKrB,UAAU,SACb,kBAAC,IAAD,KACE,kBAAC,EAAD,UAOKmB,IAETO,EAAiB","file":"component---src-pages-articles-tsx-23cbdb6548f594eac2ab.js","sourcesContent":["import { Link } from 'gatsby';\r\nimport React from 'react';\r\nimport Img from 'gatsby-image';\r\nimport '../../assets/styles/index.scss';\r\n\r\nfunction ArticleCard({ title, slug, date, fluid, description }) {\r\n  return (\r\n    <div>\r\n      <div className=\"articleCard m-5\">\r\n        <Link to={`/articles/${slug}`}>\r\n          <div className=\"articleCard__Image\">\r\n            <Img fluid={fluid} />\r\n          </div>\r\n          <h1 className=\"articleCard__Title text-blue-600 my-3 hover:text-red-400\">\r\n            {title}\r\n          </h1>\r\n        </Link>\r\n        <div className=\"articleCard__Info\">\r\n          <p>{description}</p>\r\n          <h3 className=\"articleCard__Date my-2 text-gray-400 \">\r\n            Published On: {date}\r\n          </h3>\r\n          <Link to={`/articles/${slug}`}>\r\n            <button className=\"button is-primary\">Continue Reading</button>\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ArticleCard;\r\n","import React from 'react';\r\nimport { graphql, StaticQuery } from 'gatsby';\r\nimport ArticleCard from '../components/organ/ArticleCard';\r\nimport Layout from '../components/Global/Layout';\r\nimport SideScreen from '../components/organism/SideScreen';\r\n\r\nfunction article() {\r\n  return (\r\n    <Layout>\r\n      <div className=\"columns\">\r\n        <div className=\"column is-two-thirds\" style={{ marginRight: '.5rem' }}>\r\n          <div className=\"article\">\r\n            <StaticQuery\r\n              query={articlePageQuery}\r\n              render={(data) => {\r\n                return (\r\n                  <div>\r\n                    {data.allStrapiArticle.edges.map(({ node }) => (\r\n                      <ArticleCard\r\n                        key={node.id}\r\n                        title={node.title}\r\n                        slug={node.slug}\r\n                        date={node.publishedAt}\r\n                        description={node.description}\r\n                        fluid={node.image.childImageSharp.fluid}\r\n                      />\r\n                    ))}\r\n                  </div>\r\n                );\r\n              }}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"column is-one-thirds\">\r\n          <SideScreen />\r\n        </div>\r\n      </div>\r\n    </Layout>\r\n  );\r\n}\r\n\r\nexport default article;\r\n\r\nconst articlePageQuery = graphql`\r\n  query article {\r\n    allStrapiArticle(\r\n      sort: { fields: publishedAt, order: DESC }\r\n      filter: { status: { eq: \"published\" } }\r\n      limit: 8\r\n    ) {\r\n      edges {\r\n        node {\r\n          id\r\n          title\r\n          slug\r\n          publishedAt(formatString: \"DD MM YYYY\")\r\n          description\r\n          image {\r\n            childImageSharp {\r\n              fluid {\r\n                ...GatsbyImageSharpFluid\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import React from 'react';\r\nimport Img from 'gatsby-image';\r\nimport { Link } from 'gatsby';\r\nimport '../../assets/styles/index.scss';\r\nimport { slugify } from '../../assets/utilityFunctions';\r\n\r\nfunction BestProductLine({ productFamily, fixed }) {\r\n  return (\r\n    <div>\r\n      <div className=\"\">\r\n        <Link to={`/products/${slugify(productFamily)}`}>\r\n          <div className=\"flex flex-row my-1\">\r\n            <Img fixed={fixed} />\r\n            <h4 className=\"mx-2 my-4 text-blue-600 hover:text-red-400\">\r\n              {productFamily}\r\n            </h4>\r\n          </div>\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default BestProductLine;\r\n","import React from 'react';\r\nimport { graphql, StaticQuery } from 'gatsby';\r\nimport { Link } from 'gatsby';\r\nimport Img from 'gatsby-image';\r\nimport '../../assets/styles/index.scss';\r\n\r\nfunction ArticleSectionSideScreen() {\r\n  return (\r\n    <div className=\"sideScreen_ArticleSection\">\r\n      <StaticQuery\r\n        query={articleSectionSideScreen}\r\n        render={(data) => {\r\n          return (\r\n            <div className=\"articleSectionSideScreen\">\r\n              {data.allStrapiArticle.edges.map(({ node }) => (\r\n                <div className=\"my-3\" key={node.id}>\r\n                  <Link to={`/articles/${node.slug}`}>\r\n                    <Img fluid={node.image.childImageSharp.fluid} />\r\n                    <h1 className=\"text-blue-600 hover:text-red-400\">\r\n                      {node.title}\r\n                    </h1>\r\n                  </Link>\r\n                  <h3 className=\"text-gray-400\">\r\n                    Published On: {node.publishedAt}\r\n                  </h3>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          );\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ArticleSectionSideScreen;\r\n\r\nconst articleSectionSideScreen = graphql`\r\n  {\r\n    allStrapiArticle(sort: { fields: publishedAt, order: DESC }, limit: 3) {\r\n      edges {\r\n        node {\r\n          id\r\n          title\r\n          slug\r\n          publishedAt(formatString: \"DD MM YYYY\")\r\n          image {\r\n            childImageSharp {\r\n              fluid {\r\n                ...GatsbyImageSharpFluid\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import React from 'react';\r\nimport { graphql, StaticQuery } from 'gatsby';\r\nimport BestProductLine from '../organ/BestProductLine';\r\nimport ArticleSectionSideScreen from '../organ/ArticleSectionSideScreen';\r\nimport Bounce from 'react-reveal/Bounce';\r\nimport '../../assets/styles/index.scss';\r\n\r\nfunction SideScreen() {\r\n  return (\r\n    <div>\r\n      <div className=\"sideScreen_ProductSection\">\r\n        <StaticQuery\r\n          query={SideScreenPost}\r\n          render={(data) => {\r\n            return (\r\n              <div>\r\n                {data.allStrapiProduct.edges.map(({ node }) => (\r\n                  <Bounce key={node.id}>\r\n                    <BestProductLine\r\n                      key={node.id}\r\n                      fixed={node.image.childImageSharp.fixed}\r\n                      productFamily={node.productFamily}\r\n                    />\r\n                  </Bounce>\r\n                ))}\r\n              </div>\r\n            );\r\n          }}\r\n        />\r\n      </div>\r\n      <div className=\"my-10\">\r\n        <Bounce>\r\n          <ArticleSectionSideScreen />\r\n        </Bounce>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SideScreen;\r\n\r\nconst SideScreenPost = graphql`\r\n  {\r\n    allStrapiProduct(\r\n      filter: { rating: { eq: 10 } }\r\n      limit: 15\r\n      sort: { fields: publishedAt, order: DESC }\r\n    ) {\r\n      edges {\r\n        node {\r\n          id\r\n          name\r\n          productFamily\r\n          image {\r\n            childImageSharp {\r\n              fixed(height: 58, width: 64) {\r\n                ...GatsbyImageSharpFixed\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n"],"sourceRoot":""}